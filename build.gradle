buildscript
{
    repositories
    {
        mavenCentral()
        maven
        {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven
        {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies
    {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.8-4.0.0"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".nightly_" + ENV.DRONE_BUILD_NUMBER
}
group= "minestrapteam"
archivesBaseName = "Minestrappolation"
targetCompatibility = '1.7'
sourceCompatibility = '1.7'

minecraft
{
    version = "1.8-11.14.3.1491"
    		
    if (file('../run').exists())
    {
    	runDir = '../run'
    }
    else
    {
    	runDir = 'eclipse'
    }
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20150727"
}

task textureZip(type: Zip)
textureZip
{
	classifier = 'avt'
	archiveName = "${archivesBaseName}-${version}-avt.zip";
	
	from ('src/extra/resources')
    {
        include('**')
    }
}

task devJar(type: Jar, dependsOn: 'classes')
devJar
{
    classifier = 'dev'
    archiveName = "${archivesBaseName}-${version}-dev.jar"
    
    from ('build/classes/main')
    {
        include('minestrapteam/minestrappolation/**')
    }
    from ('build/resources/main')
    {
        include('assets/**')
    }
}

task srcJar(type: Jar)
srcJar
{
    classifier = 'src'
    archiveName = "${archivesBaseName}-${version}-src.jar"
    
    from ('src/main/java')
    {
        include('minestrapteam/minestrappolation/**')
    }
    from ('src/main/resources')
    {
        include('assets/**')
    }
}

task buildApi(dependsOn: ['build', 'srcJar', 'devJar', 'textureZip'])

dependencies
{
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from (sourceSets.main.resources.srcDirs)
    {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from (sourceSets.main.resources.srcDirs)
    {
        exclude 'mcmod.info'
    }
}

artifacts {
    archives srcJar
    archives devJar
}

//fix IntelliJ assets
idea { module { inheritOutputDirs = true } }